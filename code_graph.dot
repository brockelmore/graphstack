digraph {
    0 [ label = "Code(0x16)" ]
    1 [ label = "Stack(Intrinsic::CallDataSize)" ]
    2 [ label = "Stack(Intrinsic::CallDataSize)" ]
    3 [ label = "Stack(0x4)" ]
    4 [ label = "Stack(0x4)" ]
    5 [ label = "Stack(Intrinsic::CallDataSize)" ]
    6 [ label = "Stack(0x16)" ]
    7 [ label = "Code(0x82d)" ]
    8 [ label = "Stack(Calldata[NodeIndex(13)])" ]
    9 [ label = "Stack(Calldata[NodeIndex(13)])" ]
    10 [ label = "Stack(Calldata[NodeIndex(13)])" ]
    11 [ label = "Stack(Calldata[NodeIndex(13)])" ]
    12 [ label = "Stack(0x0)" ]
    13 [ label = "Stack(0x0)" ]
    14 [ label = "Stack(0xe0)" ]
    15 [ label = "Stack(0x799320bb)" ]
    16 [ label = "Stack(0x82d)" ]
    17 [ label = "Code(0x3a)" ]
    18 [ label = "Stack(Calldata[NodeIndex(13)])" ]
    19 [ label = "Stack(Calldata[NodeIndex(13)])" ]
    20 [ label = "Stack(Calldata[NodeIndex(13)])" ]
    21 [ label = "Stack(0x0)" ]
    22 [ label = "Stack(0x0)" ]
    23 [ label = "Stack(0xe0)" ]
    24 [ label = "Stack(0xc64b3bb5)" ]
    25 [ label = "Stack(0x3a)" ]
    26 [ label = "Code(0x829)" ]
    27 [ label = "Stack(Intrinsic::CallValue)" ]
    28 [ label = "Stack(0x829)" ]
    29 [ label = "Code(0x825)" ]
    30 [ label = "Stack(Intrinsic::CallDataSize)" ]
    31 [ label = "Stack(0x20)" ]
    32 [ label = "Stack(0x20)" ]
    33 [ label = "Stack(Intrinsic::CallDataSize)" ]
    34 [ label = "Stack(0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)" ]
    35 [ label = "Stack(Intrinsic::CallDataSize)" ]
    36 [ label = "Stack(0x825)" ]
    37 [ label = "Code(0x822)" ]
    38 [ label = "Stack(Calldata[NodeIndex(37)])" ]
    39 [ label = "Stack(0xffffffffffffffff)" ]
    40 [ label = "Stack(0xffffffffffffffff)" ]
    41 [ label = "Stack(Calldata[NodeIndex(37)])" ]
    42 [ label = "Stack(Calldata[NodeIndex(37)])" ]
    43 [ label = "Stack(0x4)" ]
    44 [ label = "Stack(0x4)" ]
    45 [ label = "Stack(0x822)" ]
    46 [ label = "Code(0x822)" ]
    47 [ label = "Stack((Intrinsics: [CallDataSize], Calldata Offsets: [NodeIndex(37)]))" ]
    48 [ label = "Stack((Intrinsics: [CallDataSize], Calldata Offsets: [NodeIndex(37)]))" ]
    49 [ label = "Stack(Intrinsic::CallDataSize)" ]
    50 [ label = "Stack(Calldata[NodeIndex(37)])" ]
    51 [ label = "Stack(0x23)" ]
    52 [ label = "Stack(Calldata[NodeIndex(37)])" ]
    53 [ label = "Stack(Calldata[NodeIndex(37)])" ]
    54 [ label = "Stack(0x4)" ]
    55 [ label = "Stack(0x4)" ]
    56 [ label = "Stack(0x822)" ]
    57 [ label = "Code(0x822)" ]
    58 [ label = "Stack(Calldata[NodeIndex(37)])" ]
    59 [ label = "Stack(0xffffffffffffffff)" ]
    60 [ label = "Stack(Calldata[NodeIndex(37)])" ]
    61 [ label = "Stack(Calldata[NodeIndex(37)])" ]
    62 [ label = "Stack(Calldata[NodeIndex(37)])" ]
    63 [ label = "Stack(Calldata[NodeIndex(37)])" ]
    64 [ label = "Stack(Calldata[NodeIndex(37)])" ]
    65 [ label = "Stack(0x4)" ]
    66 [ label = "Stack(0x4)" ]
    67 [ label = "Stack(0x4)" ]
    68 [ label = "Stack(0x4)" ]
    69 [ label = "Stack(0x822)" ]
    70 [ label = "Code(0x822)" ]
    71 [ label = "Stack((Intrinsics: [CallDataSize], Calldata Offsets: [NodeIndex(37), NodeIndex(37)]))" ]
    72 [ label = "Stack(Intrinsic::CallDataSize)" ]
    73 [ label = "Stack(Calldata[NodeIndex(37), NodeIndex(37)])" ]
    74 [ label = "Stack(0x24)" ]
    75 [ label = "Stack(0x24)" ]
    76 [ label = "Stack(Calldata[NodeIndex(37), NodeIndex(37)])" ]
    77 [ label = "Stack(Calldata[NodeIndex(37)])" ]
    78 [ label = "Stack(Calldata[NodeIndex(37)])" ]
    79 [ label = "Stack(Calldata[NodeIndex(37)])" ]
    80 [ label = "Stack(Calldata[NodeIndex(37)])" ]
    81 [ label = "Stack(Calldata[NodeIndex(37)])" ]
    82 [ label = "Stack(0x4)" ]
    83 [ label = "Stack(0x4)" ]
    84 [ label = "Stack(0x4)" ]
    85 [ label = "Stack(0x4)" ]
    86 [ label = "Stack(Calldata[NodeIndex(37)])" ]
    87 [ label = "Stack(Calldata[NodeIndex(37)])" ]
    88 [ label = "Stack(0x4)" ]
    89 [ label = "Stack(0x4)" ]
    90 [ label = "Stack(0x822)" ]
    91 [ label = "Code(0x86a)" ]
    92 [ label = "Stack(0x86a)" ]
    93 [ label = "Code(0x871)" ]
    94 [ label = "Stack(Calldata[NodeIndex(37)])" ]
    95 [ label = "Stack(Calldata[NodeIndex(37)])" ]
    96 [ label = "Stack(0x2a)" ]
    97 [ label = "Stack(Calldata[NodeIndex(37)])" ]
    98 [ label = "Stack(Calldata[NodeIndex(37)])" ]
    99 [ label = "Stack(Calldata[NodeIndex(37)])" ]
    100 [ label = "Stack(Calldata[NodeIndex(37)])" ]
    101 [ label = "Stack(Calldata[NodeIndex(37)])" ]
    102 [ label = "Stack(0x4)" ]
    103 [ label = "Stack(0x4)" ]
    104 [ label = "Stack(0x4)" ]
    105 [ label = "Stack(0x4)" ]
    106 [ label = "Stack(0x871)" ]
    105 -> 3 [ label = "Duplicant" ]
    5 -> 2 [ label = "LtLhs" ]
    3 -> 2 [ label = "LtRhs" ]
    2 -> 1 [ label = "IsZero" ]
    6 -> 0 [ label = "ConditionalJumpLoc" ]
    1 -> 0 [ label = "ConditionalJumpConditional" ]
    22 -> 21 [ label = "Duplicant" ]
    21 -> 20 [ label = "CalldataOffset" ]
    23 -> 19 [ label = "RShiftor" ]
    20 -> 19 [ label = "RShiftee" ]
    19 -> 9 [ label = "Duplicant" ]
    15 -> 8 [ label = "EqLhs" ]
    9 -> 8 [ label = "EqRhs" ]
    16 -> 7 [ label = "ConditionalJumpLoc" ]
    8 -> 7 [ label = "ConditionalJumpConditional" ]
    24 -> 18 [ label = "EqLhs" ]
    19 -> 18 [ label = "EqRhs" ]
    25 -> 17 [ label = "ConditionalJumpLoc" ]
    18 -> 17 [ label = "ConditionalJumpConditional" ]
    28 -> 26 [ label = "ConditionalJumpLoc" ]
    27 -> 26 [ label = "ConditionalJumpConditional" ]
    32 -> 31 [ label = "Duplicant" ]
    35 -> 33 [ label = "Addend" ]
    34 -> 33 [ label = "Addend" ]
    33 -> 30 [ label = "SltLhs" ]
    31 -> 30 [ label = "SltRhs" ]
    36 -> 29 [ label = "ConditionalJumpLoc" ]
    30 -> 29 [ label = "ConditionalJumpConditional" ]
    105 -> 102 [ label = "Duplicant" ]
    102 -> 101 [ label = "CalldataOffset" ]
    59 -> 39 [ label = "Duplicant" ]
    101 -> 41 [ label = "Duplicant" ]
    41 -> 38 [ label = "GtLhs" ]
    39 -> 38 [ label = "GtRhs" ]
    45 -> 37 [ label = "ConditionalJumpLoc" ]
    38 -> 37 [ label = "ConditionalJumpConditional" ]
    101 -> 52 [ label = "Duplicant" ]
    52 -> 50 [ label = "Addend" ]
    51 -> 50 [ label = "Addend" ]
    50 -> 48 [ label = "SltLhs" ]
    49 -> 48 [ label = "SltRhs" ]
    48 -> 47 [ label = "IsZero" ]
    56 -> 46 [ label = "ConditionalJumpLoc" ]
    47 -> 46 [ label = "ConditionalJumpConditional" ]
    101 -> 100 [ label = "Duplicant" ]
    105 -> 104 [ label = "Duplicant" ]
    104 -> 99 [ label = "Addend" ]
    100 -> 99 [ label = "Addend" ]
    99 -> 98 [ label = "CalldataOffset" ]
    98 -> 60 [ label = "Duplicant" ]
    60 -> 58 [ label = "GtLhs" ]
    59 -> 58 [ label = "GtRhs" ]
    69 -> 57 [ label = "ConditionalJumpLoc" ]
    58 -> 57 [ label = "ConditionalJumpConditional" ]
    75 -> 74 [ label = "Duplicant" ]
    98 -> 77 [ label = "Duplicant" ]
    101 -> 86 [ label = "Duplicant" ]
    86 -> 76 [ label = "Addend" ]
    77 -> 76 [ label = "Addend" ]
    76 -> 73 [ label = "Addend" ]
    74 -> 73 [ label = "Addend" ]
    73 -> 71 [ label = "GtLhs" ]
    72 -> 71 [ label = "GtRhs" ]
    90 -> 70 [ label = "ConditionalJumpLoc" ]
    71 -> 70 [ label = "ConditionalJumpConditional" ]
    98 -> 97 [ label = "Duplicant" ]
    97 -> 95 [ label = "EqLhs" ]
    96 -> 95 [ label = "EqRhs" ]
    92 -> 91 [ label = "JumpLoc" ]
    95 -> 94 [ label = "IsZero" ]
    106 -> 93 [ label = "ConditionalJumpLoc" ]
    94 -> 93 [ label = "ConditionalJumpConditional" ]
}
